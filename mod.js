// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var r,t=Object.defineProperty,o=Object.prototype,a=o.toString,n=o.__defineGetter__,l=o.__defineSetter__,i=o.__lookupGetter__,u=o.__lookupSetter__;function c(e,r,t,o){var a,n,l,i,u,c,_,f,p,b,y,d,s,v,j,g,m,w,h,O;if(!((h=r[0])<=0))for(_=(a=t[0])<0?(1-h)*a:0,f=(n=t[1])<0?(1-h)*n:0,p=(l=t[2])<0?(1-h)*l:0,b=(i=t[3])<0?(1-h)*i:0,y=(u=t[4])<0?(1-h)*u:0,d=(c=t[5])<0?(1-h)*c:0,s=e[0],v=e[1],j=e[2],g=e[3],m=e[4],w=e[5],O=0;O<h;O++)w[d]=o(s[_],v[f],j[p],g[b],m[y]),_+=a,f+=n,p+=l,b+=i,y+=u,d+=c}function _(e,r,t,o,a){var n,l,i,u,c,_,f,p,b,y,d,s,v,j,g,m,w,h,O,P;if(!((O=r[0])<=0))for(f=o[0],p=o[1],b=o[2],y=o[3],d=o[4],s=o[5],n=t[0],l=t[1],i=t[2],u=t[3],c=t[4],_=t[5],v=e[0],j=e[1],g=e[2],m=e[3],w=e[4],h=e[5],P=0;P<O;P++)h[s]=a(v[f],j[p],g[b],m[y],w[d]),f+=n,p+=l,b+=i,y+=u,d+=c,s+=_}r=function(){try{return e({},"x",{}),!0}catch(e){return!1}}()?t:function(e,r,t){var c,_,f,p;if("object"!=typeof e||null===e||"[object Array]"===a.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===a.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((_="value"in t)&&(i.call(e,r)||u.call(e,r)?(c=e.__proto__,e.__proto__=o,delete e[r],e[r]=t.value,e.__proto__=c):e[r]=t.value),f="get"in t,p="set"in t,_&&(f||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return f&&n&&n.call(e,r,t.get),p&&l&&l.call(e,r,t.set),e},r(c,"ndarray",{configurable:!1,enumerable:!1,writable:!1,value:_});export{c as default,_ as ndarray};
//# sourceMappingURL=mod.js.map
